<?php
/**
 * Created by PhpStorm.
 * User: pengjixiang
 * Date: 2017/9/14
 * Time: 下午2:12
 */

namespace app\controllers;



use app\api\CheckVcodeApi;
use yii\base\Exception;
use yii\web\Controller;
use app\models\AgentInfo;
use yii\db\ActiveRecord;

class WaterShopController extends WxController
{

    public function beforeAction($action)
    {
        $this->checkOpenid();
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    //计算距离
    public function getDistance($lat1, $lng1, $lat2, $lng2)
    {
        if(empty($lat2)||empty($lng2)){
            return 9999;
        }
        $earthRadius = 6367000; //approximate radius of earth in meters
        $lat1 = ($lat1 * pi() ) / 180;
        $lng1 = ($lng1 * pi() ) / 180;
        $lat2 = ($lat2 * pi() ) / 180;
        $lng2 = ($lng2 * pi() ) / 180;
        $calcLongitude = $lng2 - $lng1;
        $calcLatitude = $lat2 - $lat1;
        $stepOne = pow(sin($calcLatitude / 2), 2) + cos($lat1) * cos($lat2) * pow(sin($calcLongitude / 2), 2);
        $stepTwo = 2 * asin(min(1, sqrt($stepOne)));
        $calculatedDistance = $earthRadius * $stepTwo;
        return round($calculatedDistance/1000,2);
    }


    //--------------------------------


    //前端要求接口
    public function actionIndex(){
        //微信权限参数
        $power_data=$this->GetSignPackage();
        return $this->renderPartial("index",['power_data'=>json_encode($power_data)]);
    }

    //ajax获取微信权限参数
//    public function actionGetPowerData(){
//        //微信权限参数
//        $power_data=$this->GetSignPackage();
//        return json_encode($power_data);
//    }

    //Ajax获取一级分类数据
    public function actionGetCategory(){
        $category=ActiveRecord::findBySql("
        select distinct goods.category_id,goods_category.Name as CategoryName
        from goods
        inner join goods_category on goods_category.Id=goods.category_id
        order by goods_category.RowTime desc
        ")->asArray()->all();
        return json_encode($category);
    }

    //获取门店数据
    public function GetShop($lat='',$lng='',$category_id=''){
        //从门店表获取门店信息(shop_name:门店名称、Address:地址、image1:门店图片)
        $datas=ActiveRecord::findBySql("select DISTINCT agent_shop.*,
        agent_info.Address,agent_info.BaiDuLat,agent_info.BaiDuLng
        from agent_shop
        inner join agent_info ON agent_shop.agent_id=agent_info.Id
        inner join agent_goods ON agent_goods.agent_id=agent_shop.agent_id
        inner join goods ON goods.id=agent_goods.goods_id
        where agent_shop.close_time > now() and goods.category_id=$category_id
        and agent_shop.open_time < now()")->asArray()->all();

        if(!$datas || !is_array($datas)){
            return '';
        }

        //获取距离
        foreach($datas as $key=>&$data){
            $data['distance']=$this->getDistance($data['BaiDuLat'],$data['BaiDuLng'],$lat,$lng);
            $distance[$key] = $data['distance'];
        }

        if(count($datas)>1){
            //排序
            array_multisort($distance,SORT_ASC,$datas);
        }
        return $datas;
    }

    //点击一级分类进入距离最近的门店，或者切换门店进入指定门店
    public function actionAgentShop(){
        $agent_id=\Yii::$app->request->get('agent_id');//获取指定门店id
        $lat=\Yii::$app->request->get('lat');
        $lng=\Yii::$app->request->get('lng');
        $category_id=\Yii::$app->request->get('category_id');//一级分类id
        return $this->renderPartial('agent-shop',['lat'=>$lat,'lng'=>$lng,'category_id'=>$category_id,'agent_id'=>$agent_id]);
    }
    //ajax对应一级分类下的二级分类的商品
    public function actionGetShopGoods(){
        $agent_id=\Yii::$app->request->get('agent_id');//获取指定门店id
        $lat=\Yii::$app->request->get('lat');
        $lng=\Yii::$app->request->get('lng');
        $category_id=\Yii::$app->request->get('category_id');//一级分类id
        if(!$lat||!$lng||!$category_id){
            return json_encode(['state'=>-1,'msg'=>'参数错误']);
        }

        if(!$agent_id){//没有指定门店就获取最近门店id
            $result=$this->GetShop($lat,$lng,$category_id);
            if(!$result&&!is_array($result)){
                return json_encode(['state'=>-1,'msg'=>'没有找到门店']);
            }
            $agent_id=$result[0]['agent_id'];
        }
        $datas=$this->GetGoodsByCategory($agent_id,$category_id);
        return json_encode(['state'=>0,'datas'=>$datas]);

    }
    //对应一级分类下所有二级分类的商品
    public function GetGoodsByCategory($agent_id,$category1_id){
        //获取该门店下对应一级分类的所有二级分类的所有商品
        $goods=ActiveRecord::findBySql("
        select DISTINCT goods_category.Name as SecondMenu,goods.name as GoodsName,
        goods.id as goods_id,goods.category_id as category1_id,
        goods.category2_id,agent_goods.realprice,agent_goods.originalprice,
        goods_image.goods_image1,agent_goods.agent_id
        from agent_goods
        left join goods on agent_goods.goods_id=goods.id
        left join goods_image on goods_image.goods_id=goods.id
        left join goods_category on goods_category.Id=goods.category2_id
        where agent_goods.agent_id=$agent_id and goods.category_id=$category1_id
        ORDER BY agent_goods.id asc
        ")->asArray()->all();
        $datas=[];
        foreach($goods as &$good){
            $datas[$good['SecondMenu']][]=$good;
        }
        //获取门店信息(shop_name:门店名称、shop_detail:门店简介、image1:门店图片、Address:地址)
        $agent_info=ActiveRecord::findBySql("select agent_shop.*,agent_info.Address from agent_shop JOIN agent_info on agent_shop.agent_id=agent_info.id where agent_shop.agent_id=$agent_id")->asArray()->one();

        return [
            'agent_info'=>$agent_info,//门店信息
            'datas'=>$datas,//二级菜单及商品
        ];
    }

    //进入商品详情页
    public function actionGoodsDetail(){
        $agent_id=\Yii::$app->request->get('agent_id');//门店id
        $goods_id=\Yii::$app->request->get('goods_id');//商品id
        return $this->renderPartial('goods-detail',['agent_id'=>$agent_id,'goods_id'=>$goods_id]);
    }

    //ajax获取商品详情数据
    public function actionGetDetailData(){

        $agent_id=\Yii::$app->request->get('agent_id');//门店id
        $goods_id=\Yii::$app->request->get('goods_id');//商品id
        if(!$agent_id||!$goods_id){
            return json_encode(['state'=>-1,'msg'=>'参数错误']);
        }
        //电话
        $tels=ActiveRecord::findBySql("select agent_shop.shop_tel1,
agent_shop.shop_tel2
from agent_shop
where agent_shop.agent_id=$agent_id
")->asArray()->all();
        //详情图片
        $images=ActiveRecord::findBySql("select goods_image7,goods_image8,
        goods_image9,goods_image10,goods_image11,goods_image12
        from goods_image where goods_id=$goods_id
        ")->asArray()->all();
//         var_dump($tels,$images);exit;
        return json_encode(['state'=>0,'tels'=>$tels,'images'=>$images]);


    }

    //切换门店
    public function actionShopList(){
        $lat=\Yii::$app->request->get('lat');
        $lng=\Yii::$app->request->get('lng');
        $category_id=\Yii::$app->request->get('category_id');//一级分类id
        return $this->renderPartial("shop-list",['lng'=>$lng,'lat'=>$lat,'category_id'=>$category_id]);
    }

    //ajax获取所有门店数据
    public function actionGetAllShopData(){
        $lat=\Yii::$app->request->get('lat');
        $lng=\Yii::$app->request->get('lng');
        $category_id=\Yii::$app->request->get('category_id');
        if(!$lat||!$lng||!$category_id){
            return json_encode(['state'=>-1,'msg'=>'参数错误']);
        }
        $result=$this->GetShop($lat,$lng,$category_id);
        if(!$result&&!is_array($result)){
            return json_encode(['state'=>-1,'msg'=>'没有找到门店']);
        }
        return json_encode(['state'=>0,'datas'=>$result]);

    }

    //---------------------------------------------------------
    //点击立即购买
    //1、ajax验证是否登陆过
    public function actionCheckLogin(){

        //检测是否登陆
        $open_id=\Yii::$app->session->get("openid");
        $is_login=ActiveRecord::findBySql("select Id,Tel,HeadPortrait from shop_user where OpenId='$open_id'")->asArray()->one();
        $sql1='';
        $sql2='';
        if(!$is_login){//没有登陆
            //是否是有设备的用户
            $user=ActiveRecord::findBySql("select Id,Tel,HeadPortrait,OpenId from user_info where OpenId='$open_id'")->asArray()->one();
            if($user){
                $image_url='';
                if(!$user['HeadPortrait']){
                    //下载头像
                    $image_url=$this->GetInfo();
                    if($image_url){
                        $sql1="update user_info set HeadPortrait='$image_url' where Id='{$user['Id']}'";
                    }
                }
                //保存到shop_user表
                $now=date('Y-m-d H:i:s');
                $url=$user['HeadPortrait']?$user['HeadPortrait']:($image_url?$image_url:'');
                if($url){
                    $sql2="insert into shop_user (`Tel`,`OpenId`,`HeadPortrait`,`RowTime`) values('{$user['Tel']}','{$user['OpenId']}','$url','$now')";
                }else{
                    $sql2="insert into shop_user (`Tel`,`OpenId`,`RowTime`) values('{$user['Tel']}','{$user['OpenId']}','$now')";
                }
            }else{
                return json_encode(['state'=>-1,'msg'=>'没有登陆']);
            }

        }else{
            if(!$is_login['HeadPortrait']){
                //下载头像
                $image_url=$this->GetInfo();
                if($image_url){
                    $sql1="update user_info set HeadPortrait='$image_url' where Tel='{$is_login['Tel']}'";
                    //保存到shop_user表
                    $sql2="update shop_user set HeadPortrait='$image_url' where Id='{$is_login['Id']}'";
                }
            }
        }
        $transaction=\Yii::$app->db->beginTransaction();
        try{
            if($sql1){
                $re=\Yii::$app->db->createCommand($sql1)->execute();
                if(!$re){
                    throw new Exception('保存用户信息失败');
                }
            }
            if($sql2){
                $re=\Yii::$app->db->createCommand($sql2)->execute();
                if(!$re){
                    throw new Exception('保存用户信息失败');
                }
            }
            $transaction->commit();
            return json_encode(['state'=>0]);
        }catch (Exception $e){
            $transaction->rollBack();
            return json_encode(['state'=>-2,'msg'=>$e->getMessage()]);
        }
    }
    //2、订水商城登陆页面、登陆验证
    public function actionShopLogin(){
        if(\Yii::$app->request->isAjax){
            $mobile=\Yii::$app->request->get("mobile");
            $vcode=\Yii::$app->request->get("vcode");
            $result=(new CheckVcodeApi())->post($mobile,$vcode);
            if($result->state!=0){
                $msg=$this->getMsgByErrorCode($result->state);
                return json_encode(['state'=>-1,'msg'=>$msg]);
            }
            //保存信息
            //下载头像
            $image_url=$this->GetInfo();
            $open_id=\Yii::$app->session->get('openid');
            $now=date('Y-m-d H:i:s');
            //保存到shop_user表
            if($image_url){
                $re=\Yii::$app->db->createCommand("insert into shop_user (`Tel`,`OpenId`,`HeadPortrait`,`RowTime`) values('$mobile','$open_id','$image_url','$now')")->execute();
            }else{
                $re=\Yii::$app->db->createCommand("insert into shop_user (`Tel`,`OpenId`,`RowTime`) values('$mobile','$open_id','$now')")->execute();
            }
            if(!$re){
                return json_encode(['state'=>-1,'msg'=>'保存信息失败']);
            }
            return json_encode(['state'=>0]);
        }else{
            $agent_id=\Yii::$app->request->get('agent_id');//门店id
            $goods_id=\Yii::$app->request->get('goods_id');//商品id
            return $this->renderPartial('shop-login',['agent_id'=>$agent_id,'goods_id'=>$goods_id]);
        }
    }
    //3、获取商品信息
    public function actionGetGoodsInfo(){
        $agent_id=\Yii::$app->request->get('agent_id');//门店id
        $goods_id=\Yii::$app->request->get('goods_id');//商品id
        if(!$agent_id||!$goods_id){
            return json_encode(['state'=>-1,'msg'=>'参数错误']);
        }
        $data=ActiveRecord::findBySql("
        select goods2.id as GoodsId,goods2.name as GoodsName,
        goods2.volume as GoodsVolume,goods_image.goods_image1 as ImageUrl,
        agent_stock.stock as GoodsStock,goods2.unit,
        agent_stock.id as StockId,agent_goods.realprice as Price
        from goods
		INNER JOIN goods as goods2 on goods2.name=goods.name
        INNER JOIN agent_stock on agent_stock.goods_id=goods2.id
        INNER JOIN agent_goods on agent_goods.goods_id=goods2.id
        INNER JOIN goods_image on goods_image.goods_id=goods2.id
        where goods.id=$goods_id and agent_stock.agent_id=$agent_id
        and agent_goods.agent_id=$agent_id
        ")->asArray()->all();
        return json_encode(['state'=>0,'data'=>$data]);
    }
    //4、填写、确认订单页面
    public function actionGoodsOrder(){
        $agent_id=\Yii::$app->request->get('agent_id');//门店id
        $goods_id=\Yii::$app->request->get('goods_id');//商品id
        $goods_info=\Yii::$app->request->get('goods_info');//商品信息
        $csrfToken=\Yii::$app->request->getCsrfToken();
        return $this->renderPartial('goods-order',['agent_id'=>$agent_id,'goods_id'=>$goods_id,'goods_info'=>$goods_info,'csrfToken'=>$csrfToken]);
    }
    //5、Ajax获取收货地址
    public function actionGetAddress(){
        $state=\Yii::$app->request->get('state');
        $str='';
        if($state==1){//只获取默认地址
            $str=' and shop_user_address_info.State=1';
        }
        $open_id=\Yii::$app->session->get('openid');
        $address=ActiveRecord::findBySql("
        select shop_user_address_info.Id,shop_user_address_info.UserName,
        shop_user_address_info.Tel,shop_user_address_info.Province,
        shop_user_address_info.City,shop_user_address_info.Area,
        shop_user_address_info.Address,shop_user_address_info.State
        from shop_user_address_info
        inner join shop_user on shop_user.Id=shop_user_address_info.ShopUserId
        where shop_user.OpenId='$open_id' $str")->asArray()->all();
        return json_encode($address);
    }
    //6、添加/修改地址页面
    public function actionAddAddress(){
        $Id=trim(\Yii::$app->request->get('Id'));//修改时传
        return $this->renderPartial('add-address',['Id'=>$Id]);
    }
    //7、Ajax保存添加的地址
    public function actionSaveAddAddress(){
        $UserName=trim(\Yii::$app->request->get('UserName'));//收货人
        $Tel=trim(\Yii::$app->request->get('Tel'));//电话
        $Province=\Yii::$app->request->get('Province');//省
        $City=\Yii::$app->request->get('City');//市
        $Area=\Yii::$app->request->get('Area');//区
        $Address=trim(\Yii::$app->request->get('Address'));//地址
        if(!$UserName||!$Tel||!$Province||!$City||!$Area||!$Address){
            return json_encode(['state'=>-1,'msg'=>'参数错误']);
        }
        $open_id=\Yii::$app->session->get('openid');
        $user=ActiveRecord::findBySql("select Id from shop_user where OpenId='$open_id'")->asArray()->one();
        if(!$user){
            return json_encode(['state'=>-1,'msg'=>'没有用户信息']);
        }
        $re=\Yii::$app->db->createCommand("insert into shop_user_address_info (`UserName`,`Tel`,`Province`,`City`,`Area`,`Address`,`ShopUserId`)
        values ('$UserName','$Tel','$Province','$City','$Area','$Address',{$user['Id']})")->execute();
        if(!$re){
            return json_encode(['state'=>-1,'msg'=>'保存失败']);
        }
        return json_encode(['state'=>0]);
    }
    //8、ajax将地址设为默认或取消默认地址
    public function actionSetDefaultAddress(){
        $Id=trim(\Yii::$app->request->get('Id'));
        $State=trim(\Yii::$app->request->get('State'));
        if(!$Id||($State!=0&&$State!=1)){
            return json_encode(['state'=>-1,'msg'=>'参数错误']);
        }
        $now=date('Y-m-d H:i:s');
        $re=\Yii::$app->db->createCommand("update shop_user_address_info set State=$State,`UpdateTime`='$now' where Id=$Id")->execute();
        if(!$re){
            return json_encode(['state'=>-1,'msg'=>'设置失败']);
        }
        return json_encode(['state'=>0]);
    }
    //9、ajax获取要修改的地址数据
    public function actionGetEditAddress(){
        $Id=trim(\Yii::$app->request->get('Id'));
        if(!$Id){
            return json_encode(['state'=>-1,'msg'=>'参数错误']);
        }
        $data=ActiveRecord::findBySql("select UserName,Tel,Province,City,Area,Address from shop_user_address_info where Id=$Id")->asArray()->one();
        return json_encode(['state'=>0,'data'=>$data]);
    }
    //10、ajax保存修改了的地址数据
    public function actionSaveEditAddress(){
        $Id=trim(\Yii::$app->request->get('Id'));
        $UserName=trim(\Yii::$app->request->get('UserName'));//收货人
        $Tel=trim(\Yii::$app->request->get('Tel'));//电话
        $Province=\Yii::$app->request->get('Province');//省
        $City=\Yii::$app->request->get('City');//市
        $Area=\Yii::$app->request->get('Area');//区
        $Address=trim(\Yii::$app->request->get('Address'));//地址
        if(!$UserName||!$Tel||!$Province||!$City||!$Area||!$Address||!$Id){
            return json_encode(['state'=>-1,'msg'=>'参数错误']);
        }
        $now=date('Y-m-d H:i:s');
        $re=\Yii::$app->db->createCommand("update shop_user_address_info set `UserName`='$UserName',`Tel`='$Tel',`Province`='$Province',`City`='$City'.`Area`='$Area',`Address`='$Address',`UpdateTime`='$now' where Id=$Id")->execute();
        if(!$re){
            return json_encode(['state'=>-1,'msg'=>'修改失败']);
        }
        return json_encode(['state'=>0]);
    }
    //11、删除地址
    public function actionDelAddress(){
        $Id=trim(\Yii::$app->request->get('Id'));
        if(!$Id){
            return json_encode(['state'=>-1,'msg'=>'参数错误']);
        }
        $re=\Yii::$app->db->createCommand("delete from shop_user_address_info where Id=$Id")->execute();
        if(!$re){
            return json_encode(['state'=>-1,'msg'=>'删除失败']);
        }
        return json_encode(['state'=>0]);
    }



}